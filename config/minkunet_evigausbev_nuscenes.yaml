TRAIN:
#  project_name: 'auto-cosense'
  wandb_account: 'opheliayuan'
  log_every: 2
  max_epoch: 50
  gpus: 1
  log_every_n_steps: 10
  check_val_every_n_epoch: 5
  resume: true
  optimizer:
    lr: 0.001
    weight_decay: 1e-2
    betas: [0.95, 0.999]
    milestones: [20, 45]
    gamma: 0.1


DATASET:
  name: Nuscenes
  path: "/media/hdd/yuan/koko/data/nuScenes/prob_bev_labels"
  visualize: false
  load_all: false
  max_cav: 7
  com_range: 45
  bev_res: &bev_res 0.2 # resolution of bev-opv2v map
  load_camera: false

  voxel:
    features: 'x,y,z,d,c,s,i' # t:theta, d:depth, z:height, y:euclidean centers., x:euclidean centers., c:class, i:intensity
    coords: 'x,y,z'
    resolution: &voxel_size [0.2, 0.2, 0.2] # name:unit [theta: deg, depth: m, zyx: m]
    xyz_idx: &xyz_idx [0, 1, 2]
    voxel_feature_dim: &voxel_feature_dim 14 # encoded norm features + xyz
  crop:
#    d: &d [0, 50] # d_min, d_max
    x: [-50, 50] # z_min, z_max
    y: [-50, 50] # z_min, z_max
    z: &z [-5, 3] # z_min, z_max
  lidar_range: [-50, -50, -3, 50, 50, 3]
  free_space_h: 0
  free_space_d: 9
  free_space_step: 1.0
  normalize_features:
    dxy: &d [0, 50]
    z: *z

  augmentation: true
  preprocessors:
    args:
      DimensionlessCoordinates:
        voxel_size: *voxel_size
    train: ['DimensionlessCoordinates']
    val: ['DimensionlessCoordinates']
    test: ['DimensionlessCoordinates']
  postprocessors:
    args:
      DistributionPostProcess:
        det_r: 50
        voxel_size: *voxel_size
        vis_dir: /media/hdd/yuan/evibev-opv2v/nuscenes/debug/test/img
        visualization: True
        stride:
          surface: 2
          object: 2
        distr_r:
          surface: 2.0
          object: 2.0
    test: [ 'DistributionPostProcess' ]

  batch_size_train: 8
  batch_size_val: 3
  batch_size_test: 8
  n_workers: 4
  shuffle: true

MODEL:
  order: ['mink_unet', 'm_compression', 'h_evi_gaus_bev']
  mink_unet:
    in_dim: 14
    cache: ['p2', 'p4']
    n_cls: 17
    annealing_step: &ann_step 50
  m_compression:
    - p2:
        steps: [ 4, 5 ]
        channels: [ 64, 64, 64 ]
    - p4:
        steps: [ 2, 5 ]
        channels: [ 64, 64, 64 ]

#  h_detection:
#    # stage 1
#    - s1:
#        det_r: &det_r 50
#        voxel_size: &vs 0.2
#        stride: 4
#        in_dim: 64
#        box_dim: [ 4.41, 1.98, 1.64 ]         # [l, w, h]
#        box_z: 1.6                          # z of box center
#        box_angles: [ 0, 90 ]                 # in degree
#        iou_match: 0.4
#        iou_unmatch: 0.2
#        sample_size: 512
#    - s2: []
  h_evi_gaus_bev:
    args:
      voxel_size: &vs 0.2
      det_r: &det_r 50
      distr_r: 2.0 # in meter
      var0: [ 0.1, 0.1 ]
      annealing_step: *ann_step
    convs:
      p2:
        kernels: [5, 5, 3] # receiptive field: 2.0m
        in_dim: 64
        expand_coordinates: True
    heads:
      - h_surface:
          name: surface
          stride: 2

      - h_object:
          name: object
          stride: 2
          sampling: road # sample pixels with boxes or road




TEST:
  vis_function: false
  metrics:
    MetricStaticIou:
      stride: 2
    MetricDynamicIou:
      det_r: *det_r
      voxel_size: *voxel_size
      stride: 2







